The ''2-matrix_divided'' module
===============================

using ''matrix_divided''
------------------------

Import function from module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

test normal matrix:
	>>> matrix_divided([[2, 4, 8], [1, 2, 3]], 2)
	[[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]

test one element:
	>>> matrix_divided([[2]], 2)
	[[1.0]]

test divide by negative number:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
	[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

test divide by zero:
	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
        ...
	ZeroDivisionError: division by zero

test matrix not equal:
	>>> matrix_divided([[1, 2, 3, 7], [4, 5, 6]], 2)
        Traceback (most recent call last):
        ...
	TypeError: Each row of the matrix must have the same size

test empty matrix:
	>>> matrix_divided([[], [], []], 30)
	Traceback (most recent call last):
        ...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

test 1st arg is str:
	>>> matrix_divided("boo", 2)
	Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

